#!/usr/bin/env python
# coding: utf-8

# # Introduction

# <div class="alert alert-block alert-warning">
# <font color=black><br>
# 
# **What?** Using widgets 
# 
# <br></font>
# </div>

# # What is Bokeh?

# <div class="alert alert-block alert-info">
# <font color=black><br>
# 
# - **D3.js** is a JavaScript library for producing sophisticated interactive visualizations for the web. 
# - Although it is not in Python, it is both trendy and widely used, and it is well worth your while to be familiar with it. 
# - **Bokeh** is a newer library that brings D3-style visualizations into Python. 
# 
# <br></font>
# </div>

# # Import modules

# In[1]:


from bokeh.layouts import layout
from bokeh.models import Div, RangeSlider, Spinner
from bokeh.plotting import figure, show


# <div class="alert alert-block alert-info">
# <font color=black><br>
# 
# - Rendering plot inside your notebook  
# - If you do not want it rendered inside your notebook just hash those two lines 
# 
# <br></font>
# </div>

# In[2]:


from bokeh.io import push_notebook,  output_notebook
output_notebook()


# In[3]:


# Modules' version


# In[4]:


import bokeh
get_ipython().run_line_magic('load_ext', 'watermark')
get_ipython().run_line_magic('watermark', '-p bokeh')


# # Step #1 - Set up your data, your figure, and your renderer

# In[5]:


# prepare some data
x = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
y = [4, 5, 5, 7, 2, 6, 4, 9, 1, 3]

# create plot with circle glyphs
p = figure(x_range=(1, 9), plot_width=500, plot_height=250)
points = p.circle(x=x, y=y, size=30, fill_color="#21a7df")


# # Step #2 - Create a Div object and pass it some HTML code as a string

# In[6]:


# set up textarea (div)
div = Div(
    text="""
          <p>Select the circle's size using this control element:</p>
          """,
    width=200,
    height=30,
)


# # Step #3 - Create a spinner object

# In[7]:


# set up spinner
spinner = Spinner(
    title="Circle size",
    low=0,
    high=60,
    step=5,
    value=points.glyph.size,
    width=200,
)


# <div class="alert alert-block alert-info">
# <font color=black><br>
# 
# - To link the value generated by the spinner to the size property of your glyph, use the js_link() function. 
# - This function uses JavaScript to interactively link two Bokeh models. 
# - The first argument you pass to this function is the attribute of your spinner ("value") that you want to link to your circle glyphs. 
# - The second attribute is the glyph you want to link to your spinner (points.glyph). 
# - The third argument is the property of your glyph that you want to link to your spinner’s value: 
# 
# <br></font>
# </div>

# In[8]:


spinner.js_link("value", points.glyph, "size")


# # Step #4 - Create a RangeSlider object

# In[9]:


# set up RangeSlider
range_slider = RangeSlider(
    title="Adjust x-axis range",
    start=0,
    end=10,
    step=1,
    value=(p.x_range.start, p.x_range.end),
)


# <div class="alert alert-block alert-info">
# <font color=black><br>
# 
# - To link the values generated by the RangeSlider to the existing plot, use the js_link() function again. 
# - This time, however, you need to assign two values at once: the beginning of the plot’s x-axis and the end of its x-axis. 
# - The RangeSlider returns a tuple of those two values. 
# - Therefore, you need to use the attr_selector of the js_link() function to tell Bokeh which part of the Tuple to assign to either the start or the end of the plot’s x-axis:
# 
# <br></font>
# </div>

# In[10]:


range_slider.js_link("value", p.x_range, "start", attr_selector=0)
range_slider.js_link("value", p.x_range, "end", attr_selector=1)


# # Step #5 - Create layout

# In[11]:


# create layout
layout = layout(
    [
        [div, spinner],
        [range_slider],
        [p],
    ]
)

# show result
show(layout)


# # References

# <div class="alert alert-block alert-warning">
# <font color=black><br>
# 
# - https://docs.bokeh.org/en/latest/docs/first_steps/first_steps_9.html
# 
# <br></font>
# </div>

# # Conclusions

# <div class="alert alert-block alert-danger">
# <font color=black><br>
# 
# - For simple plottig, keep using Matplotlib.
# - If you need some sort of simple interacting functionality use bokeh.
# 
# <br></font>
# </div>

# In[ ]:




